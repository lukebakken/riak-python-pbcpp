// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: riak_yokozuna.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "riak_yokozuna.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* RpbYokozunaIndex_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RpbYokozunaIndex_reflection_ = NULL;
const ::google::protobuf::Descriptor* RpbYokozunaIndexGetReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RpbYokozunaIndexGetReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* RpbYokozunaIndexGetResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RpbYokozunaIndexGetResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* RpbYokozunaIndexPutReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RpbYokozunaIndexPutReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* RpbYokozunaIndexDeleteReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RpbYokozunaIndexDeleteReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* RpbYokozunaSchema_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RpbYokozunaSchema_reflection_ = NULL;
const ::google::protobuf::Descriptor* RpbYokozunaSchemaPutReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RpbYokozunaSchemaPutReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* RpbYokozunaSchemaGetReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RpbYokozunaSchemaGetReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* RpbYokozunaSchemaGetResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RpbYokozunaSchemaGetResp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_riak_5fyokozuna_2eproto() {
  protobuf_AddDesc_riak_5fyokozuna_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "riak_yokozuna.proto");
  GOOGLE_CHECK(file != NULL);
  RpbYokozunaIndex_descriptor_ = file->message_type(0);
  static const int RpbYokozunaIndex_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpbYokozunaIndex, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpbYokozunaIndex, schema_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpbYokozunaIndex, n_val_),
  };
  RpbYokozunaIndex_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RpbYokozunaIndex_descriptor_,
      RpbYokozunaIndex::default_instance_,
      RpbYokozunaIndex_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpbYokozunaIndex, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpbYokozunaIndex, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RpbYokozunaIndex));
  RpbYokozunaIndexGetReq_descriptor_ = file->message_type(1);
  static const int RpbYokozunaIndexGetReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpbYokozunaIndexGetReq, name_),
  };
  RpbYokozunaIndexGetReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RpbYokozunaIndexGetReq_descriptor_,
      RpbYokozunaIndexGetReq::default_instance_,
      RpbYokozunaIndexGetReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpbYokozunaIndexGetReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpbYokozunaIndexGetReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RpbYokozunaIndexGetReq));
  RpbYokozunaIndexGetResp_descriptor_ = file->message_type(2);
  static const int RpbYokozunaIndexGetResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpbYokozunaIndexGetResp, index_),
  };
  RpbYokozunaIndexGetResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RpbYokozunaIndexGetResp_descriptor_,
      RpbYokozunaIndexGetResp::default_instance_,
      RpbYokozunaIndexGetResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpbYokozunaIndexGetResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpbYokozunaIndexGetResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RpbYokozunaIndexGetResp));
  RpbYokozunaIndexPutReq_descriptor_ = file->message_type(3);
  static const int RpbYokozunaIndexPutReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpbYokozunaIndexPutReq, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpbYokozunaIndexPutReq, timeout_),
  };
  RpbYokozunaIndexPutReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RpbYokozunaIndexPutReq_descriptor_,
      RpbYokozunaIndexPutReq::default_instance_,
      RpbYokozunaIndexPutReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpbYokozunaIndexPutReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpbYokozunaIndexPutReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RpbYokozunaIndexPutReq));
  RpbYokozunaIndexDeleteReq_descriptor_ = file->message_type(4);
  static const int RpbYokozunaIndexDeleteReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpbYokozunaIndexDeleteReq, name_),
  };
  RpbYokozunaIndexDeleteReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RpbYokozunaIndexDeleteReq_descriptor_,
      RpbYokozunaIndexDeleteReq::default_instance_,
      RpbYokozunaIndexDeleteReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpbYokozunaIndexDeleteReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpbYokozunaIndexDeleteReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RpbYokozunaIndexDeleteReq));
  RpbYokozunaSchema_descriptor_ = file->message_type(5);
  static const int RpbYokozunaSchema_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpbYokozunaSchema, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpbYokozunaSchema, content_),
  };
  RpbYokozunaSchema_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RpbYokozunaSchema_descriptor_,
      RpbYokozunaSchema::default_instance_,
      RpbYokozunaSchema_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpbYokozunaSchema, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpbYokozunaSchema, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RpbYokozunaSchema));
  RpbYokozunaSchemaPutReq_descriptor_ = file->message_type(6);
  static const int RpbYokozunaSchemaPutReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpbYokozunaSchemaPutReq, schema_),
  };
  RpbYokozunaSchemaPutReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RpbYokozunaSchemaPutReq_descriptor_,
      RpbYokozunaSchemaPutReq::default_instance_,
      RpbYokozunaSchemaPutReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpbYokozunaSchemaPutReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpbYokozunaSchemaPutReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RpbYokozunaSchemaPutReq));
  RpbYokozunaSchemaGetReq_descriptor_ = file->message_type(7);
  static const int RpbYokozunaSchemaGetReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpbYokozunaSchemaGetReq, name_),
  };
  RpbYokozunaSchemaGetReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RpbYokozunaSchemaGetReq_descriptor_,
      RpbYokozunaSchemaGetReq::default_instance_,
      RpbYokozunaSchemaGetReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpbYokozunaSchemaGetReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpbYokozunaSchemaGetReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RpbYokozunaSchemaGetReq));
  RpbYokozunaSchemaGetResp_descriptor_ = file->message_type(8);
  static const int RpbYokozunaSchemaGetResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpbYokozunaSchemaGetResp, schema_),
  };
  RpbYokozunaSchemaGetResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RpbYokozunaSchemaGetResp_descriptor_,
      RpbYokozunaSchemaGetResp::default_instance_,
      RpbYokozunaSchemaGetResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpbYokozunaSchemaGetResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpbYokozunaSchemaGetResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RpbYokozunaSchemaGetResp));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_riak_5fyokozuna_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RpbYokozunaIndex_descriptor_, &RpbYokozunaIndex::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RpbYokozunaIndexGetReq_descriptor_, &RpbYokozunaIndexGetReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RpbYokozunaIndexGetResp_descriptor_, &RpbYokozunaIndexGetResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RpbYokozunaIndexPutReq_descriptor_, &RpbYokozunaIndexPutReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RpbYokozunaIndexDeleteReq_descriptor_, &RpbYokozunaIndexDeleteReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RpbYokozunaSchema_descriptor_, &RpbYokozunaSchema::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RpbYokozunaSchemaPutReq_descriptor_, &RpbYokozunaSchemaPutReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RpbYokozunaSchemaGetReq_descriptor_, &RpbYokozunaSchemaGetReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RpbYokozunaSchemaGetResp_descriptor_, &RpbYokozunaSchemaGetResp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_riak_5fyokozuna_2eproto() {
  delete RpbYokozunaIndex::default_instance_;
  delete RpbYokozunaIndex_reflection_;
  delete RpbYokozunaIndexGetReq::default_instance_;
  delete RpbYokozunaIndexGetReq_reflection_;
  delete RpbYokozunaIndexGetResp::default_instance_;
  delete RpbYokozunaIndexGetResp_reflection_;
  delete RpbYokozunaIndexPutReq::default_instance_;
  delete RpbYokozunaIndexPutReq_reflection_;
  delete RpbYokozunaIndexDeleteReq::default_instance_;
  delete RpbYokozunaIndexDeleteReq_reflection_;
  delete RpbYokozunaSchema::default_instance_;
  delete RpbYokozunaSchema_reflection_;
  delete RpbYokozunaSchemaPutReq::default_instance_;
  delete RpbYokozunaSchemaPutReq_reflection_;
  delete RpbYokozunaSchemaGetReq::default_instance_;
  delete RpbYokozunaSchemaGetReq_reflection_;
  delete RpbYokozunaSchemaGetResp::default_instance_;
  delete RpbYokozunaSchemaGetResp_reflection_;
}

void protobuf_AddDesc_riak_5fyokozuna_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023riak_yokozuna.proto\"\?\n\020RpbYokozunaInde"
    "x\022\014\n\004name\030\001 \002(\014\022\016\n\006schema\030\002 \001(\014\022\r\n\005n_val"
    "\030\003 \001(\r\"&\n\026RpbYokozunaIndexGetReq\022\014\n\004name"
    "\030\001 \001(\014\";\n\027RpbYokozunaIndexGetResp\022 \n\005ind"
    "ex\030\001 \003(\0132\021.RpbYokozunaIndex\"K\n\026RpbYokozu"
    "naIndexPutReq\022 \n\005index\030\001 \002(\0132\021.RpbYokozu"
    "naIndex\022\017\n\007timeout\030\002 \001(\r\")\n\031RpbYokozunaI"
    "ndexDeleteReq\022\014\n\004name\030\001 \002(\014\"2\n\021RpbYokozu"
    "naSchema\022\014\n\004name\030\001 \002(\014\022\017\n\007content\030\002 \001(\014\""
    "=\n\027RpbYokozunaSchemaPutReq\022\"\n\006schema\030\001 \002"
    "(\0132\022.RpbYokozunaSchema\"\'\n\027RpbYokozunaSch"
    "emaGetReq\022\014\n\004name\030\001 \002(\014\">\n\030RpbYokozunaSc"
    "hemaGetResp\022\"\n\006schema\030\001 \002(\0132\022.RpbYokozun"
    "aSchemaB)\n\027com.basho.riak.protobufB\016Riak"
    "YokozunaPB", 570);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "riak_yokozuna.proto", &protobuf_RegisterTypes);
  RpbYokozunaIndex::default_instance_ = new RpbYokozunaIndex();
  RpbYokozunaIndexGetReq::default_instance_ = new RpbYokozunaIndexGetReq();
  RpbYokozunaIndexGetResp::default_instance_ = new RpbYokozunaIndexGetResp();
  RpbYokozunaIndexPutReq::default_instance_ = new RpbYokozunaIndexPutReq();
  RpbYokozunaIndexDeleteReq::default_instance_ = new RpbYokozunaIndexDeleteReq();
  RpbYokozunaSchema::default_instance_ = new RpbYokozunaSchema();
  RpbYokozunaSchemaPutReq::default_instance_ = new RpbYokozunaSchemaPutReq();
  RpbYokozunaSchemaGetReq::default_instance_ = new RpbYokozunaSchemaGetReq();
  RpbYokozunaSchemaGetResp::default_instance_ = new RpbYokozunaSchemaGetResp();
  RpbYokozunaIndex::default_instance_->InitAsDefaultInstance();
  RpbYokozunaIndexGetReq::default_instance_->InitAsDefaultInstance();
  RpbYokozunaIndexGetResp::default_instance_->InitAsDefaultInstance();
  RpbYokozunaIndexPutReq::default_instance_->InitAsDefaultInstance();
  RpbYokozunaIndexDeleteReq::default_instance_->InitAsDefaultInstance();
  RpbYokozunaSchema::default_instance_->InitAsDefaultInstance();
  RpbYokozunaSchemaPutReq::default_instance_->InitAsDefaultInstance();
  RpbYokozunaSchemaGetReq::default_instance_->InitAsDefaultInstance();
  RpbYokozunaSchemaGetResp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_riak_5fyokozuna_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_riak_5fyokozuna_2eproto {
  StaticDescriptorInitializer_riak_5fyokozuna_2eproto() {
    protobuf_AddDesc_riak_5fyokozuna_2eproto();
  }
} static_descriptor_initializer_riak_5fyokozuna_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int RpbYokozunaIndex::kNameFieldNumber;
const int RpbYokozunaIndex::kSchemaFieldNumber;
const int RpbYokozunaIndex::kNValFieldNumber;
#endif  // !_MSC_VER

RpbYokozunaIndex::RpbYokozunaIndex()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RpbYokozunaIndex)
}

void RpbYokozunaIndex::InitAsDefaultInstance() {
}

RpbYokozunaIndex::RpbYokozunaIndex(const RpbYokozunaIndex& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RpbYokozunaIndex)
}

void RpbYokozunaIndex::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  schema_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  n_val_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RpbYokozunaIndex::~RpbYokozunaIndex() {
  // @@protoc_insertion_point(destructor:RpbYokozunaIndex)
  SharedDtor();
}

void RpbYokozunaIndex::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (schema_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete schema_;
  }
  if (this != default_instance_) {
  }
}

void RpbYokozunaIndex::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RpbYokozunaIndex::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RpbYokozunaIndex_descriptor_;
}

const RpbYokozunaIndex& RpbYokozunaIndex::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_riak_5fyokozuna_2eproto();
  return *default_instance_;
}

RpbYokozunaIndex* RpbYokozunaIndex::default_instance_ = NULL;

RpbYokozunaIndex* RpbYokozunaIndex::New() const {
  return new RpbYokozunaIndex;
}

void RpbYokozunaIndex::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_schema()) {
      if (schema_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        schema_->clear();
      }
    }
    n_val_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RpbYokozunaIndex::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RpbYokozunaIndex)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_schema;
        break;
      }

      // optional bytes schema = 2;
      case 2: {
        if (tag == 18) {
         parse_schema:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_schema()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_n_val;
        break;
      }

      // optional uint32 n_val = 3;
      case 3: {
        if (tag == 24) {
         parse_n_val:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &n_val_)));
          set_has_n_val();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RpbYokozunaIndex)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RpbYokozunaIndex)
  return false;
#undef DO_
}

void RpbYokozunaIndex::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RpbYokozunaIndex)
  // required bytes name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->name(), output);
  }

  // optional bytes schema = 2;
  if (has_schema()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->schema(), output);
  }

  // optional uint32 n_val = 3;
  if (has_n_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->n_val(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RpbYokozunaIndex)
}

::google::protobuf::uint8* RpbYokozunaIndex::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RpbYokozunaIndex)
  // required bytes name = 1;
  if (has_name()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->name(), target);
  }

  // optional bytes schema = 2;
  if (has_schema()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->schema(), target);
  }

  // optional uint32 n_val = 3;
  if (has_n_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->n_val(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RpbYokozunaIndex)
  return target;
}

int RpbYokozunaIndex::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bytes name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->name());
    }

    // optional bytes schema = 2;
    if (has_schema()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->schema());
    }

    // optional uint32 n_val = 3;
    if (has_n_val()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->n_val());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RpbYokozunaIndex::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RpbYokozunaIndex* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RpbYokozunaIndex*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RpbYokozunaIndex::MergeFrom(const RpbYokozunaIndex& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_schema()) {
      set_schema(from.schema());
    }
    if (from.has_n_val()) {
      set_n_val(from.n_val());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RpbYokozunaIndex::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RpbYokozunaIndex::CopyFrom(const RpbYokozunaIndex& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpbYokozunaIndex::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RpbYokozunaIndex::Swap(RpbYokozunaIndex* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(schema_, other->schema_);
    std::swap(n_val_, other->n_val_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RpbYokozunaIndex::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RpbYokozunaIndex_descriptor_;
  metadata.reflection = RpbYokozunaIndex_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RpbYokozunaIndexGetReq::kNameFieldNumber;
#endif  // !_MSC_VER

RpbYokozunaIndexGetReq::RpbYokozunaIndexGetReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RpbYokozunaIndexGetReq)
}

void RpbYokozunaIndexGetReq::InitAsDefaultInstance() {
}

RpbYokozunaIndexGetReq::RpbYokozunaIndexGetReq(const RpbYokozunaIndexGetReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RpbYokozunaIndexGetReq)
}

void RpbYokozunaIndexGetReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RpbYokozunaIndexGetReq::~RpbYokozunaIndexGetReq() {
  // @@protoc_insertion_point(destructor:RpbYokozunaIndexGetReq)
  SharedDtor();
}

void RpbYokozunaIndexGetReq::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void RpbYokozunaIndexGetReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RpbYokozunaIndexGetReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RpbYokozunaIndexGetReq_descriptor_;
}

const RpbYokozunaIndexGetReq& RpbYokozunaIndexGetReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_riak_5fyokozuna_2eproto();
  return *default_instance_;
}

RpbYokozunaIndexGetReq* RpbYokozunaIndexGetReq::default_instance_ = NULL;

RpbYokozunaIndexGetReq* RpbYokozunaIndexGetReq::New() const {
  return new RpbYokozunaIndexGetReq;
}

void RpbYokozunaIndexGetReq::Clear() {
  if (has_name()) {
    if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      name_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RpbYokozunaIndexGetReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RpbYokozunaIndexGetReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RpbYokozunaIndexGetReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RpbYokozunaIndexGetReq)
  return false;
#undef DO_
}

void RpbYokozunaIndexGetReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RpbYokozunaIndexGetReq)
  // optional bytes name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RpbYokozunaIndexGetReq)
}

::google::protobuf::uint8* RpbYokozunaIndexGetReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RpbYokozunaIndexGetReq)
  // optional bytes name = 1;
  if (has_name()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RpbYokozunaIndexGetReq)
  return target;
}

int RpbYokozunaIndexGetReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RpbYokozunaIndexGetReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RpbYokozunaIndexGetReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RpbYokozunaIndexGetReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RpbYokozunaIndexGetReq::MergeFrom(const RpbYokozunaIndexGetReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RpbYokozunaIndexGetReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RpbYokozunaIndexGetReq::CopyFrom(const RpbYokozunaIndexGetReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpbYokozunaIndexGetReq::IsInitialized() const {

  return true;
}

void RpbYokozunaIndexGetReq::Swap(RpbYokozunaIndexGetReq* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RpbYokozunaIndexGetReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RpbYokozunaIndexGetReq_descriptor_;
  metadata.reflection = RpbYokozunaIndexGetReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RpbYokozunaIndexGetResp::kIndexFieldNumber;
#endif  // !_MSC_VER

RpbYokozunaIndexGetResp::RpbYokozunaIndexGetResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RpbYokozunaIndexGetResp)
}

void RpbYokozunaIndexGetResp::InitAsDefaultInstance() {
}

RpbYokozunaIndexGetResp::RpbYokozunaIndexGetResp(const RpbYokozunaIndexGetResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RpbYokozunaIndexGetResp)
}

void RpbYokozunaIndexGetResp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RpbYokozunaIndexGetResp::~RpbYokozunaIndexGetResp() {
  // @@protoc_insertion_point(destructor:RpbYokozunaIndexGetResp)
  SharedDtor();
}

void RpbYokozunaIndexGetResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RpbYokozunaIndexGetResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RpbYokozunaIndexGetResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RpbYokozunaIndexGetResp_descriptor_;
}

const RpbYokozunaIndexGetResp& RpbYokozunaIndexGetResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_riak_5fyokozuna_2eproto();
  return *default_instance_;
}

RpbYokozunaIndexGetResp* RpbYokozunaIndexGetResp::default_instance_ = NULL;

RpbYokozunaIndexGetResp* RpbYokozunaIndexGetResp::New() const {
  return new RpbYokozunaIndexGetResp;
}

void RpbYokozunaIndexGetResp::Clear() {
  index_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RpbYokozunaIndexGetResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RpbYokozunaIndexGetResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .RpbYokozunaIndex index = 1;
      case 1: {
        if (tag == 10) {
         parse_index:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_index()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_index;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RpbYokozunaIndexGetResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RpbYokozunaIndexGetResp)
  return false;
#undef DO_
}

void RpbYokozunaIndexGetResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RpbYokozunaIndexGetResp)
  // repeated .RpbYokozunaIndex index = 1;
  for (int i = 0; i < this->index_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->index(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RpbYokozunaIndexGetResp)
}

::google::protobuf::uint8* RpbYokozunaIndexGetResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RpbYokozunaIndexGetResp)
  // repeated .RpbYokozunaIndex index = 1;
  for (int i = 0; i < this->index_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->index(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RpbYokozunaIndexGetResp)
  return target;
}

int RpbYokozunaIndexGetResp::ByteSize() const {
  int total_size = 0;

  // repeated .RpbYokozunaIndex index = 1;
  total_size += 1 * this->index_size();
  for (int i = 0; i < this->index_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->index(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RpbYokozunaIndexGetResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RpbYokozunaIndexGetResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RpbYokozunaIndexGetResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RpbYokozunaIndexGetResp::MergeFrom(const RpbYokozunaIndexGetResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  index_.MergeFrom(from.index_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RpbYokozunaIndexGetResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RpbYokozunaIndexGetResp::CopyFrom(const RpbYokozunaIndexGetResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpbYokozunaIndexGetResp::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->index())) return false;
  return true;
}

void RpbYokozunaIndexGetResp::Swap(RpbYokozunaIndexGetResp* other) {
  if (other != this) {
    index_.Swap(&other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RpbYokozunaIndexGetResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RpbYokozunaIndexGetResp_descriptor_;
  metadata.reflection = RpbYokozunaIndexGetResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RpbYokozunaIndexPutReq::kIndexFieldNumber;
const int RpbYokozunaIndexPutReq::kTimeoutFieldNumber;
#endif  // !_MSC_VER

RpbYokozunaIndexPutReq::RpbYokozunaIndexPutReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RpbYokozunaIndexPutReq)
}

void RpbYokozunaIndexPutReq::InitAsDefaultInstance() {
  index_ = const_cast< ::RpbYokozunaIndex*>(&::RpbYokozunaIndex::default_instance());
}

RpbYokozunaIndexPutReq::RpbYokozunaIndexPutReq(const RpbYokozunaIndexPutReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RpbYokozunaIndexPutReq)
}

void RpbYokozunaIndexPutReq::SharedCtor() {
  _cached_size_ = 0;
  index_ = NULL;
  timeout_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RpbYokozunaIndexPutReq::~RpbYokozunaIndexPutReq() {
  // @@protoc_insertion_point(destructor:RpbYokozunaIndexPutReq)
  SharedDtor();
}

void RpbYokozunaIndexPutReq::SharedDtor() {
  if (this != default_instance_) {
    delete index_;
  }
}

void RpbYokozunaIndexPutReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RpbYokozunaIndexPutReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RpbYokozunaIndexPutReq_descriptor_;
}

const RpbYokozunaIndexPutReq& RpbYokozunaIndexPutReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_riak_5fyokozuna_2eproto();
  return *default_instance_;
}

RpbYokozunaIndexPutReq* RpbYokozunaIndexPutReq::default_instance_ = NULL;

RpbYokozunaIndexPutReq* RpbYokozunaIndexPutReq::New() const {
  return new RpbYokozunaIndexPutReq;
}

void RpbYokozunaIndexPutReq::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_index()) {
      if (index_ != NULL) index_->::RpbYokozunaIndex::Clear();
    }
    timeout_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RpbYokozunaIndexPutReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RpbYokozunaIndexPutReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .RpbYokozunaIndex index = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_index()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_timeout;
        break;
      }

      // optional uint32 timeout = 2;
      case 2: {
        if (tag == 16) {
         parse_timeout:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeout_)));
          set_has_timeout();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RpbYokozunaIndexPutReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RpbYokozunaIndexPutReq)
  return false;
#undef DO_
}

void RpbYokozunaIndexPutReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RpbYokozunaIndexPutReq)
  // required .RpbYokozunaIndex index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->index(), output);
  }

  // optional uint32 timeout = 2;
  if (has_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->timeout(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RpbYokozunaIndexPutReq)
}

::google::protobuf::uint8* RpbYokozunaIndexPutReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RpbYokozunaIndexPutReq)
  // required .RpbYokozunaIndex index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->index(), target);
  }

  // optional uint32 timeout = 2;
  if (has_timeout()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->timeout(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RpbYokozunaIndexPutReq)
  return target;
}

int RpbYokozunaIndexPutReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .RpbYokozunaIndex index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->index());
    }

    // optional uint32 timeout = 2;
    if (has_timeout()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->timeout());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RpbYokozunaIndexPutReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RpbYokozunaIndexPutReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RpbYokozunaIndexPutReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RpbYokozunaIndexPutReq::MergeFrom(const RpbYokozunaIndexPutReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      mutable_index()->::RpbYokozunaIndex::MergeFrom(from.index());
    }
    if (from.has_timeout()) {
      set_timeout(from.timeout());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RpbYokozunaIndexPutReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RpbYokozunaIndexPutReq::CopyFrom(const RpbYokozunaIndexPutReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpbYokozunaIndexPutReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_index()) {
    if (!this->index().IsInitialized()) return false;
  }
  return true;
}

void RpbYokozunaIndexPutReq::Swap(RpbYokozunaIndexPutReq* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(timeout_, other->timeout_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RpbYokozunaIndexPutReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RpbYokozunaIndexPutReq_descriptor_;
  metadata.reflection = RpbYokozunaIndexPutReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RpbYokozunaIndexDeleteReq::kNameFieldNumber;
#endif  // !_MSC_VER

RpbYokozunaIndexDeleteReq::RpbYokozunaIndexDeleteReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RpbYokozunaIndexDeleteReq)
}

void RpbYokozunaIndexDeleteReq::InitAsDefaultInstance() {
}

RpbYokozunaIndexDeleteReq::RpbYokozunaIndexDeleteReq(const RpbYokozunaIndexDeleteReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RpbYokozunaIndexDeleteReq)
}

void RpbYokozunaIndexDeleteReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RpbYokozunaIndexDeleteReq::~RpbYokozunaIndexDeleteReq() {
  // @@protoc_insertion_point(destructor:RpbYokozunaIndexDeleteReq)
  SharedDtor();
}

void RpbYokozunaIndexDeleteReq::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void RpbYokozunaIndexDeleteReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RpbYokozunaIndexDeleteReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RpbYokozunaIndexDeleteReq_descriptor_;
}

const RpbYokozunaIndexDeleteReq& RpbYokozunaIndexDeleteReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_riak_5fyokozuna_2eproto();
  return *default_instance_;
}

RpbYokozunaIndexDeleteReq* RpbYokozunaIndexDeleteReq::default_instance_ = NULL;

RpbYokozunaIndexDeleteReq* RpbYokozunaIndexDeleteReq::New() const {
  return new RpbYokozunaIndexDeleteReq;
}

void RpbYokozunaIndexDeleteReq::Clear() {
  if (has_name()) {
    if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      name_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RpbYokozunaIndexDeleteReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RpbYokozunaIndexDeleteReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RpbYokozunaIndexDeleteReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RpbYokozunaIndexDeleteReq)
  return false;
#undef DO_
}

void RpbYokozunaIndexDeleteReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RpbYokozunaIndexDeleteReq)
  // required bytes name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RpbYokozunaIndexDeleteReq)
}

::google::protobuf::uint8* RpbYokozunaIndexDeleteReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RpbYokozunaIndexDeleteReq)
  // required bytes name = 1;
  if (has_name()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RpbYokozunaIndexDeleteReq)
  return target;
}

int RpbYokozunaIndexDeleteReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bytes name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RpbYokozunaIndexDeleteReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RpbYokozunaIndexDeleteReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RpbYokozunaIndexDeleteReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RpbYokozunaIndexDeleteReq::MergeFrom(const RpbYokozunaIndexDeleteReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RpbYokozunaIndexDeleteReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RpbYokozunaIndexDeleteReq::CopyFrom(const RpbYokozunaIndexDeleteReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpbYokozunaIndexDeleteReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RpbYokozunaIndexDeleteReq::Swap(RpbYokozunaIndexDeleteReq* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RpbYokozunaIndexDeleteReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RpbYokozunaIndexDeleteReq_descriptor_;
  metadata.reflection = RpbYokozunaIndexDeleteReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RpbYokozunaSchema::kNameFieldNumber;
const int RpbYokozunaSchema::kContentFieldNumber;
#endif  // !_MSC_VER

RpbYokozunaSchema::RpbYokozunaSchema()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RpbYokozunaSchema)
}

void RpbYokozunaSchema::InitAsDefaultInstance() {
}

RpbYokozunaSchema::RpbYokozunaSchema(const RpbYokozunaSchema& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RpbYokozunaSchema)
}

void RpbYokozunaSchema::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RpbYokozunaSchema::~RpbYokozunaSchema() {
  // @@protoc_insertion_point(destructor:RpbYokozunaSchema)
  SharedDtor();
}

void RpbYokozunaSchema::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (this != default_instance_) {
  }
}

void RpbYokozunaSchema::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RpbYokozunaSchema::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RpbYokozunaSchema_descriptor_;
}

const RpbYokozunaSchema& RpbYokozunaSchema::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_riak_5fyokozuna_2eproto();
  return *default_instance_;
}

RpbYokozunaSchema* RpbYokozunaSchema::default_instance_ = NULL;

RpbYokozunaSchema* RpbYokozunaSchema::New() const {
  return new RpbYokozunaSchema;
}

void RpbYokozunaSchema::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_content()) {
      if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        content_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RpbYokozunaSchema::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RpbYokozunaSchema)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_content;
        break;
      }

      // optional bytes content = 2;
      case 2: {
        if (tag == 18) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RpbYokozunaSchema)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RpbYokozunaSchema)
  return false;
#undef DO_
}

void RpbYokozunaSchema::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RpbYokozunaSchema)
  // required bytes name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->name(), output);
  }

  // optional bytes content = 2;
  if (has_content()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->content(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RpbYokozunaSchema)
}

::google::protobuf::uint8* RpbYokozunaSchema::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RpbYokozunaSchema)
  // required bytes name = 1;
  if (has_name()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->name(), target);
  }

  // optional bytes content = 2;
  if (has_content()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->content(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RpbYokozunaSchema)
  return target;
}

int RpbYokozunaSchema::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bytes name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->name());
    }

    // optional bytes content = 2;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->content());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RpbYokozunaSchema::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RpbYokozunaSchema* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RpbYokozunaSchema*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RpbYokozunaSchema::MergeFrom(const RpbYokozunaSchema& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_content()) {
      set_content(from.content());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RpbYokozunaSchema::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RpbYokozunaSchema::CopyFrom(const RpbYokozunaSchema& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpbYokozunaSchema::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RpbYokozunaSchema::Swap(RpbYokozunaSchema* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(content_, other->content_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RpbYokozunaSchema::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RpbYokozunaSchema_descriptor_;
  metadata.reflection = RpbYokozunaSchema_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RpbYokozunaSchemaPutReq::kSchemaFieldNumber;
#endif  // !_MSC_VER

RpbYokozunaSchemaPutReq::RpbYokozunaSchemaPutReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RpbYokozunaSchemaPutReq)
}

void RpbYokozunaSchemaPutReq::InitAsDefaultInstance() {
  schema_ = const_cast< ::RpbYokozunaSchema*>(&::RpbYokozunaSchema::default_instance());
}

RpbYokozunaSchemaPutReq::RpbYokozunaSchemaPutReq(const RpbYokozunaSchemaPutReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RpbYokozunaSchemaPutReq)
}

void RpbYokozunaSchemaPutReq::SharedCtor() {
  _cached_size_ = 0;
  schema_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RpbYokozunaSchemaPutReq::~RpbYokozunaSchemaPutReq() {
  // @@protoc_insertion_point(destructor:RpbYokozunaSchemaPutReq)
  SharedDtor();
}

void RpbYokozunaSchemaPutReq::SharedDtor() {
  if (this != default_instance_) {
    delete schema_;
  }
}

void RpbYokozunaSchemaPutReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RpbYokozunaSchemaPutReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RpbYokozunaSchemaPutReq_descriptor_;
}

const RpbYokozunaSchemaPutReq& RpbYokozunaSchemaPutReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_riak_5fyokozuna_2eproto();
  return *default_instance_;
}

RpbYokozunaSchemaPutReq* RpbYokozunaSchemaPutReq::default_instance_ = NULL;

RpbYokozunaSchemaPutReq* RpbYokozunaSchemaPutReq::New() const {
  return new RpbYokozunaSchemaPutReq;
}

void RpbYokozunaSchemaPutReq::Clear() {
  if (has_schema()) {
    if (schema_ != NULL) schema_->::RpbYokozunaSchema::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RpbYokozunaSchemaPutReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RpbYokozunaSchemaPutReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .RpbYokozunaSchema schema = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_schema()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RpbYokozunaSchemaPutReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RpbYokozunaSchemaPutReq)
  return false;
#undef DO_
}

void RpbYokozunaSchemaPutReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RpbYokozunaSchemaPutReq)
  // required .RpbYokozunaSchema schema = 1;
  if (has_schema()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->schema(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RpbYokozunaSchemaPutReq)
}

::google::protobuf::uint8* RpbYokozunaSchemaPutReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RpbYokozunaSchemaPutReq)
  // required .RpbYokozunaSchema schema = 1;
  if (has_schema()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->schema(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RpbYokozunaSchemaPutReq)
  return target;
}

int RpbYokozunaSchemaPutReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .RpbYokozunaSchema schema = 1;
    if (has_schema()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->schema());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RpbYokozunaSchemaPutReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RpbYokozunaSchemaPutReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RpbYokozunaSchemaPutReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RpbYokozunaSchemaPutReq::MergeFrom(const RpbYokozunaSchemaPutReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_schema()) {
      mutable_schema()->::RpbYokozunaSchema::MergeFrom(from.schema());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RpbYokozunaSchemaPutReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RpbYokozunaSchemaPutReq::CopyFrom(const RpbYokozunaSchemaPutReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpbYokozunaSchemaPutReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_schema()) {
    if (!this->schema().IsInitialized()) return false;
  }
  return true;
}

void RpbYokozunaSchemaPutReq::Swap(RpbYokozunaSchemaPutReq* other) {
  if (other != this) {
    std::swap(schema_, other->schema_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RpbYokozunaSchemaPutReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RpbYokozunaSchemaPutReq_descriptor_;
  metadata.reflection = RpbYokozunaSchemaPutReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RpbYokozunaSchemaGetReq::kNameFieldNumber;
#endif  // !_MSC_VER

RpbYokozunaSchemaGetReq::RpbYokozunaSchemaGetReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RpbYokozunaSchemaGetReq)
}

void RpbYokozunaSchemaGetReq::InitAsDefaultInstance() {
}

RpbYokozunaSchemaGetReq::RpbYokozunaSchemaGetReq(const RpbYokozunaSchemaGetReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RpbYokozunaSchemaGetReq)
}

void RpbYokozunaSchemaGetReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RpbYokozunaSchemaGetReq::~RpbYokozunaSchemaGetReq() {
  // @@protoc_insertion_point(destructor:RpbYokozunaSchemaGetReq)
  SharedDtor();
}

void RpbYokozunaSchemaGetReq::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void RpbYokozunaSchemaGetReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RpbYokozunaSchemaGetReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RpbYokozunaSchemaGetReq_descriptor_;
}

const RpbYokozunaSchemaGetReq& RpbYokozunaSchemaGetReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_riak_5fyokozuna_2eproto();
  return *default_instance_;
}

RpbYokozunaSchemaGetReq* RpbYokozunaSchemaGetReq::default_instance_ = NULL;

RpbYokozunaSchemaGetReq* RpbYokozunaSchemaGetReq::New() const {
  return new RpbYokozunaSchemaGetReq;
}

void RpbYokozunaSchemaGetReq::Clear() {
  if (has_name()) {
    if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      name_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RpbYokozunaSchemaGetReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RpbYokozunaSchemaGetReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RpbYokozunaSchemaGetReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RpbYokozunaSchemaGetReq)
  return false;
#undef DO_
}

void RpbYokozunaSchemaGetReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RpbYokozunaSchemaGetReq)
  // required bytes name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RpbYokozunaSchemaGetReq)
}

::google::protobuf::uint8* RpbYokozunaSchemaGetReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RpbYokozunaSchemaGetReq)
  // required bytes name = 1;
  if (has_name()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RpbYokozunaSchemaGetReq)
  return target;
}

int RpbYokozunaSchemaGetReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bytes name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RpbYokozunaSchemaGetReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RpbYokozunaSchemaGetReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RpbYokozunaSchemaGetReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RpbYokozunaSchemaGetReq::MergeFrom(const RpbYokozunaSchemaGetReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RpbYokozunaSchemaGetReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RpbYokozunaSchemaGetReq::CopyFrom(const RpbYokozunaSchemaGetReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpbYokozunaSchemaGetReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RpbYokozunaSchemaGetReq::Swap(RpbYokozunaSchemaGetReq* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RpbYokozunaSchemaGetReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RpbYokozunaSchemaGetReq_descriptor_;
  metadata.reflection = RpbYokozunaSchemaGetReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RpbYokozunaSchemaGetResp::kSchemaFieldNumber;
#endif  // !_MSC_VER

RpbYokozunaSchemaGetResp::RpbYokozunaSchemaGetResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RpbYokozunaSchemaGetResp)
}

void RpbYokozunaSchemaGetResp::InitAsDefaultInstance() {
  schema_ = const_cast< ::RpbYokozunaSchema*>(&::RpbYokozunaSchema::default_instance());
}

RpbYokozunaSchemaGetResp::RpbYokozunaSchemaGetResp(const RpbYokozunaSchemaGetResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RpbYokozunaSchemaGetResp)
}

void RpbYokozunaSchemaGetResp::SharedCtor() {
  _cached_size_ = 0;
  schema_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RpbYokozunaSchemaGetResp::~RpbYokozunaSchemaGetResp() {
  // @@protoc_insertion_point(destructor:RpbYokozunaSchemaGetResp)
  SharedDtor();
}

void RpbYokozunaSchemaGetResp::SharedDtor() {
  if (this != default_instance_) {
    delete schema_;
  }
}

void RpbYokozunaSchemaGetResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RpbYokozunaSchemaGetResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RpbYokozunaSchemaGetResp_descriptor_;
}

const RpbYokozunaSchemaGetResp& RpbYokozunaSchemaGetResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_riak_5fyokozuna_2eproto();
  return *default_instance_;
}

RpbYokozunaSchemaGetResp* RpbYokozunaSchemaGetResp::default_instance_ = NULL;

RpbYokozunaSchemaGetResp* RpbYokozunaSchemaGetResp::New() const {
  return new RpbYokozunaSchemaGetResp;
}

void RpbYokozunaSchemaGetResp::Clear() {
  if (has_schema()) {
    if (schema_ != NULL) schema_->::RpbYokozunaSchema::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RpbYokozunaSchemaGetResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RpbYokozunaSchemaGetResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .RpbYokozunaSchema schema = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_schema()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RpbYokozunaSchemaGetResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RpbYokozunaSchemaGetResp)
  return false;
#undef DO_
}

void RpbYokozunaSchemaGetResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RpbYokozunaSchemaGetResp)
  // required .RpbYokozunaSchema schema = 1;
  if (has_schema()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->schema(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RpbYokozunaSchemaGetResp)
}

::google::protobuf::uint8* RpbYokozunaSchemaGetResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RpbYokozunaSchemaGetResp)
  // required .RpbYokozunaSchema schema = 1;
  if (has_schema()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->schema(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RpbYokozunaSchemaGetResp)
  return target;
}

int RpbYokozunaSchemaGetResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .RpbYokozunaSchema schema = 1;
    if (has_schema()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->schema());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RpbYokozunaSchemaGetResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RpbYokozunaSchemaGetResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RpbYokozunaSchemaGetResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RpbYokozunaSchemaGetResp::MergeFrom(const RpbYokozunaSchemaGetResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_schema()) {
      mutable_schema()->::RpbYokozunaSchema::MergeFrom(from.schema());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RpbYokozunaSchemaGetResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RpbYokozunaSchemaGetResp::CopyFrom(const RpbYokozunaSchemaGetResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpbYokozunaSchemaGetResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_schema()) {
    if (!this->schema().IsInitialized()) return false;
  }
  return true;
}

void RpbYokozunaSchemaGetResp::Swap(RpbYokozunaSchemaGetResp* other) {
  if (other != this) {
    std::swap(schema_, other->schema_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RpbYokozunaSchemaGetResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RpbYokozunaSchemaGetResp_descriptor_;
  metadata.reflection = RpbYokozunaSchemaGetResp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
